buildscript {
    repositories {
        mavenLocal()
        jcenter()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath group: 'org.springframework.boot',  name: 'spring-boot-gradle-plugin',      version: spring_boot_version
        classpath "gradle.plugin.com.github.lkishalmi.gradle:gradle-gatling-plugin:0.4.1"
        classpath "org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:2.0.1"
    }

}

plugins {
    id "io.spring.dependency-management" version "0.6.0.RELEASE"
    id "com.github.lkishalmi.gatling" version "0.4.1"
    id "jacoco"
    id "org.sonarqube" version "1.2"
}

dependencyManagement {
    imports {
        mavenBom 'org.springframework.cloud:spring-cloud-dependencies:Brixton.SR3'
    }
}

test {
    jacoco {
        excludes += ['**.generated.**']
    }
}

sonarqube {
    properties {
        property "sonar.projectName", "delteme"

        property "sonar.projectKey", "org.sonarqube:java-delteme-gradle"
        property "sonar.jacoco.reportPath", "${project.buildDir}/jacoco/test.exec"
        property "sonar.exclusions", "**/generated/**,**/Application.java"
        property "sonar.sources", "src/main/java"
        property "sonar.tests", "src/test/groovy"
        property "sonar.binaries", "build/classes"
    }
}


group 'com.openlane'
version '1.0-SNAPSHOT'


task wrapper(type: Wrapper) {
  gradleVersion = '3.2'
  distributionUrl = "https://services.gradle.org/distributions/gradle-$gradleVersion-all.zip"
}

configurations {
    all*.exclude group: 'commons-logging'
}

apply plugin: 'java'
apply from: 'gradle/conf/lombok.gradle'
apply from: 'gradle/conf/boot.gradle'
apply from: 'gradle/conf/jackson.gradle'
apply from: 'gradle/conf/utils.gradle'
apply from: 'gradle/conf/groovy.gradle'
apply from: 'gradle/conf/ide.gradle'
apply from: 'gradle/conf/meta.gradle'

apply from: 'gradle/conf/test/unit.gradle'
apply from: 'gradle/conf/test/load.gradle'



sourceCompatibility = 1.8
targetCompatibility = 1.8


clean {
    delete "target"
}

repositories {
    mavenCentral()
}

